name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2
      with:
        # recursively checkout all submodules
        submodules: 'recursive'

    - name: install ubuntu dependencies
      run: |
        APTGETYES=1 make -C rai -j1 installUbuntuAll

    - name: install python dependencies
      run: |
        sudo apt-get install python3 python3-dev python3-numpy python3-pip python3-distutils
        sudo pip3 install jupyter nbconvert matplotlib pybind11

    - name: setup build files
      run: |
        make -C rai -j1 unityAll
        ln -s build_utils/CMakeLists-ubuntu.txt CMakeLists.txt

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
